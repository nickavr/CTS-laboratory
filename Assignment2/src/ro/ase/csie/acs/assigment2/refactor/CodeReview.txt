1. Code structure, naming conventions, Implementation:
- camel case not used concisely (use of 'loan_value' name)
- class is too long (we'll use DIP principle and Interface segregation)
- breaks KISS, DRY, SOLID principles (analysis further on)
- very generic function names
- bad spacing
- hardcoded values (magic numbers)
- attributes are not incapsulated

2. KISS & single responsability
- move account types in a separate enumeration
- separate actions on the account in a different interface
- reduce unnecessary methods (print(), to_string() - will override it from Object) - YAGNI principle
